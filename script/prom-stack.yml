version: '3.7'

networks:
  app_net:
    external: true

services:

  prometheus:
    image: prom/prometheus:v2.17.2
    volumes:
      - /app_data/monitor/prometheus/:/etc/prometheus/
      - /app_data/monitor/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - app_net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - app_net
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - "/app_data/monitor/alertmanager/:/etc/alertmanager/"
    networks:
      - app_net
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager
      restart_policy:
        condition: on-failure    

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - app_net
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  grafana:
    image: grafana/grafana:5.1.0
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - /app_data/monitor/grafana:/var/lib/grafana
      - /app_data/monitor/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      #- GF_INSTALL_PLUGINS=http://plugin-domain.com/my-custom-plugin.zip;custom-plugin
    networks:
      - app_net
    user: "472"
    #chown -R 472 grafana on host
    command: bash -c "
      chown -R root:root /etc/grafana && \
      chmod -R a+r /etc/grafana && \
      chown -R grafana:grafana /var/lib/grafana && \
      chown -R grafana:grafana /usr/share/grafana
      "
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
